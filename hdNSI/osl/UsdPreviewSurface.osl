shader UsdPreviewSurface(
	color diffuseColor = color(0.18),
	color emissiveColor = color(0),
	int useSpecularWorkflow = 0,
	color specularColor = color(0),
	float metallic = 0,
	float roughness = 0.5,
	float clearcoat = 0,
	float clearcoatRoughness = 0.01,
	float opacity = 1,
	float ior = 1.5,
	normal normal_ = normal(0,0,1),
	float displacement = 0,
	float occlusion = 1)
{
	color diff = diffuseColor;
	color spec = 0;
	float ccspec = 0;

	{
		float cos_theta = abs(dot(normalize(-I), normalize(N)));
		float schlick = pow(max(0.0, 1.0 - cos_theta), 5);
		float R0 = (1.0 - ior) / (1.0 + ior);
		R0 *= R0;
		ccspec = R0 + (1.0 - R0) * schlick;

		if( useSpecularWorkflow )
		{
			spec = mix(specularColor, color(1), schlick);
		}
		else
		{
			color albedo = mix(color(1.0), diffuseColor, metallic);

			/*
				The documentation says we should apply albedo both at 0 and 90
				degrees, as in:
					spec = albedo * ccspec;
				But what hdStorm actually does is apply albedo only at 0
				degrees. I think it makes more sense too. So do that.
			*/
			spec = mix(R0 * albedo, color(1.0), schlick);

			diff *= 1.0 - metallic;
		}
	}

	Ci = diff * diffuse(N);
	Ci += spec * microfacet("ggx", N, roughness * roughness, ior, 0);
	Ci = opacity * Ci + (1 - opacity) * transparent();
	Ci += ccspec * clearcoat * microfacet("ggx", N, clearcoatRoughness * clearcoatRoughness, ior, 0);
	Ci += emissiveColor * emission();
}
